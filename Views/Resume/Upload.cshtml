@model Resume.Entities.ResumeEntity

<h2 class="text-center mt-4">Upload Resume</h2>

<div class="d-flex justify-content-center align-items-center" style="min-height: 60vh;">
    <div class="p-4 border rounded shadow bg-white" style="min-width:350px;max-width:500px;width:100%;">
        <form method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <input type="hidden" name="inputType" id="inputTypeHidden" value="file" />
            <div class="mb-3">
                <label><input type="radio" name="inputTypeRadio" value="file" checked onclick="toggleInput('file')"> Upload File</label>
                <label class="ms-3"><input type="radio" name="inputTypeRadio" value="text" onclick="toggleInput('text')"> Paste Text</label>
            </div>
            <div id="fileInputDiv">
                <input type="file" name="file" accept=".pdf,.docx,.txt" class="form-control" />
            </div>
            <div id="textInputDiv" style="display:none;">
                <textarea name="resumeText" rows="10" class="form-control" placeholder="Paste your resume here..."></textarea>
            </div>
            <button type="submit" class="btn btn-primary mt-3 w-100">Analyze</button>
        </form>
        <script>
        function toggleInput(type) {
            document.getElementById('fileInputDiv').style.display = type === 'file' ? '' : 'none';
            document.getElementById('textInputDiv').style.display = type === 'text' ? '' : 'none';
            document.getElementById('inputTypeHidden').value = type;
        }
        </script>
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger mt-3">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }
    </div>
</div>

@if (Model != null)
{
    <div class="card p-3 mt-4">
        <h3>AI Feedback</h3>
        <p><strong>Name:</strong> @Model.Name</p>
        <p>
            <strong>Skills Summary:</strong><br />
            @Html.Raw(Model.SkillsSummary?.Replace("\n", "<br/>"))
        </p>

        <p>
            <strong>Strengths:</strong><br />
            @Html.Raw(Model.Strengths?.Replace("\n", "<br/>"))
        </p>

        <p>
            <strong>Weaknesses:</strong><br />
            @Html.Raw(Model.Weaknesses?.Replace("\n", "<br/>"))
        </p>

        <p>
            <strong>Suggestions:</strong><br />
            @Html.Raw(Model.Suggestions?.Replace("\n", "<br/>"))
        </p>

        <p>
            <strong>Suggested Roles:</strong><br />
            @Html.Raw(Model.SuggestedRoles?.Replace("\n", "<br/>"))
        </p>

        <div class="mt-3">
            <form asp-action="Save" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.ResumeText)
                @Html.HiddenFor(m => m.Name)
                @Html.HiddenFor(m => m.SkillsSummary)
                @Html.HiddenFor(m => m.Strengths)
                @Html.HiddenFor(m => m.Weaknesses)
                @Html.HiddenFor(m => m.Suggestions)
                @Html.HiddenFor(m => m.SuggestedRoles) 
                @Html.HiddenFor(m => m.UploadedFileName)
                <button type="submit" class="btn btn-success">💾 Save</button>
            </form>

            <form asp-action="DownloadDocxTemp" method="post" class="d-inline ms-2">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.ResumeText)
                @Html.HiddenFor(m => m.Name)
                @Html.HiddenFor(m => m.SkillsSummary)
                @Html.HiddenFor(m => m.Strengths)
                @Html.HiddenFor(m => m.Weaknesses)
                @Html.HiddenFor(m => m.Suggestions)
                @Html.HiddenFor(m => m.SuggestedRoles)
                <button type="submit" class="btn btn-primary">⬇️ Download</button>
            </form>
        </div>
    </div>
}
